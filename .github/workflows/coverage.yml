name: Coverage Report

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  coverage:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake lcov libssl-dev
        
    - name: Configure and build with coverage
      run: |
        mkdir build
        cd build
        cmake -DENABLE_COVERAGE=ON ..
        make
        
    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure
        
    - name: Generate coverage report
      run: |
        cd build
        make coverage
        
    - name: Upload coverage report as artifact
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: ./build/coverage_report/
        
    - name: Upload gcov files as fallback artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: gcov-report
        path: ./build/gcov_report/
        
    - name: Comment PR with coverage link
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const artifactUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## Code Coverage Report\n\nThe coverage report has been generated and can be downloaded from the [workflow run](${artifactUrl}).\n\nTo view the HTML report:\n1. Download the \`coverage-report\` artifact from the workflow run\n2. Extract the archive\n3. Open \`index.html\` in your browser`
          });